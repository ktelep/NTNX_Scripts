- name: Create CE VM (Tested with CE 2.1)
  hosts: pve
  vars: 
     pve_api_host: 192.168.2.25
     pve_api_user: root@pam
     pve_api_token_id: Ansible
     pve_api_token_secret: 4a0938a2-159e-4d4f-8074-a88a2b77d6e1 
     ce_vm_name: CE-Test-1
     cvm_ip_address: 192.168.2.101
     ahv_ip_address: 192.168.2.201
     subnet_address: 255.255.255.0
     dfgw_ip_address: 192.168.2.1
     pve_storage_pool: SSDPool

  tasks:
   - shell: pvesh get /cluster/nextid
     register: next_vmid
    
   - debug: msg="{{ next_vmid.stdout }}" 

   - name: Create Test VM 
     proxmox_kvm:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       node: pve1
       memory: 129536
       cores: 4
       sockets: 2
       scsihw: virtio-scsi-single
       cpu: host
       ostype: l26
       ide: 
         ide2: 'local:iso/CE21_Final.iso,media=cdrom'
       boot: 'order=ide2;scsi0;net0'
       state: present
     register: vm_result
 
   - name: Wait 5 seconds for VM to exist
     ansible.builtin.wait_for:
       timeout: 5

   - name: Gather VM Configuration
     community.general.proxmox_vm_info:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       config: current
     register: live_config

   - name: Set Disk Serial Variables
     set_fact:
       hyp_disk: '{{ live_config.proxmox_vms[0].config.scsi0 | default(" ") }}'
       cvm_disk: '{{ live_config.proxmox_vms[0].config.scsi1 | default(" ") }}'
       dat_disk: '{{ live_config.proxmox_vms[0].config.scsi2 | default(" ") }}'

   - name: Parse Hyp disk data
     set_fact:
       hyp_disk_data: "{{ hyp_disk_data|default({}) | combine ( { item.split('=')[0] : item.split('=')[1] } ) }}"
     with_items:
       - "{{ hyp_disk.split(',')[1:] }}"

   - name: Parse CVM disk data
     set_fact:
       cvm_disk_data: "{{ cvm_disk_data|default({}) | combine ( { item.split('=')[0] : item.split('=')[1] } ) }}"
     with_items:
       - "{{ cvm_disk.split(',')[1:] }}"
   
   - name: Parse Data disk data
     set_fact:
       dat_disk_data: "{{ dat_disk_data|default({}) | combine ( { item.split('=')[0] : item.split('=')[1] } ) }}"
     with_items:
       - "{{ dat_disk.split(',')[1:] }}"

   - name: Add NICs to VM
     community.general.proxmox_nic:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       interface: net0
       bridge: vmbr0

   - name: Create Hypervisor Disk in VM
     community.general.proxmox_disk:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       disk: scsi0
       storage: "{{ pve_storage_pool }}"
       size: 64 
       state: present
       cache: none
       iothread: true
       serial: "{{ hyp_disk_data['serial'] | default(lookup('community.general.random_string', special=false, length=12)) }}"

   - name: Create CVM Disk in VM
     community.general.proxmox_disk:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       disk: scsi1
       storage: "{{ pve_storage_pool }}"
       size: 400
       state: present
       cache: none
       iothread: true
       serial: "{{ cvm_disk_data['serial'] | default(lookup('community.general.random_string', special=false, length=12)) }}"

   - name: Create Data Disk in VM
     community.general.proxmox_disk:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       disk: scsi2
       storage: "{{ pve_storage_pool }}"
       size: 800
       state: present
       cache: none
       iothread: true
       serial: "{{ dat_disk_data['serial'] | default(lookup('community.general.random_string', special=false, length=12)) }}"

   - name: Power on VM
     proxmox_kvm:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       node: pve1
       state: started

   - name: Get Mac Address
     community.general.proxmox_vm_info:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       config: current 
     register: result 

   - name: Set Mac address
     set_fact:
        macaddr: '{{ result.proxmox_vms[0].config.net0.split("=")[1].split(",")[0] }}'

   - name: Wait 5 minutes for VM to boot into the installer
     ansible.builtin.wait_for:
       timeout: 300
  
   - name: Get IP Address
     shell: arp-scan -I vmbr0 -l | grep -i {{ macaddr }}  | awk '{print $1}'
     register: install_ip
 
   - debug: var=install_ip

   - name: Move to Host IP Area
     shell: |
       qm sendkey {{ vm_result.vmid }} tab
       qm sendkey {{ vm_result.vmid }} tab

   - name: Set Host IP
     shell: |
       qm sendkey {{ vm_result.vmid }} {{ item }}
     with_items:
       - "{{ ahv_ip_address | list | map('regex_replace','\\.','dot')}}"

   - name: Move to CVM IP Area
     shell: |
       qm sendkey {{ vm_result.vmid }} tab

   - name: Set CVM IP
     shell: |
       qm sendkey {{ vm_result.vmid }} {{ item }}
     with_items:
       - "{{ cvm_ip_address | list | map('regex_replace','\\.','dot')}}"

   - name: Move to Subnet Mask Area
     shell: |
       qm sendkey {{ vm_result.vmid }} tab

   - name: Set Subnet Mask
     shell: |
       qm sendkey {{ vm_result.vmid }} {{ item }}
     with_items:
       - "{{ subnet_address | list | map('regex_replace','\\.','dot')}}"

   - name: Move to Gateway Area
     shell: |
       qm sendkey {{ vm_result.vmid }} tab

   - name: Enter Gateway IP Address
     shell: |
       qm sendkey {{ vm_result.vmid }} {{ item }}
     with_items:
       - "{{ dfgw_ip_address | list | map('regex_replace','\\.','dot')}}"
       
   - name: Move to Page 2
     shell: |
       qm sendkey {{ vm_result.vmid }} tab
       qm sendkey {{ vm_result.vmid }} ret

   - name: Wait 30 seconds for validation on inputs
     ansible.builtin.wait_for:
       timeout: 30

   - name: Agree to Licensing
     shell: |
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} pgdn
       qm sendkey {{ vm_result.vmid }} tab
       qm sendkey {{ vm_result.vmid }} spc
       qm sendkey {{ vm_result.vmid }} tab
       qm sendkey {{ vm_result.vmid }} tab
       qm sendkey {{ vm_result.vmid }} ret

   - name: Wait 30 minutes for install to complete
     ansible.builtin.wait_for:
       timeout: 1800

   - name: Update boot order
     proxmox_kvm:
       api_host: "{{ pve_api_host }}"
       api_user: "{{ pve_api_user }}"
       api_token_id: "{{ pve_api_token_id }}"
       api_token_secret: "{{ pve_api_token_secret }}"
       name: "{{ ce_vm_name }}"
       node: pve1
       boot: 'order=scsi0;ide2;net0'

   - name: Reboot System
     shell: |
       qm sendkey {{ vm_result.vmid }} Y
       qm sendkey {{ vm_result.vmid }} ret

